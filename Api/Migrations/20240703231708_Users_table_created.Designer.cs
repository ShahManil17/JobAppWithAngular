// <auto-generated />
using System;
using JobApplicationAPIs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobApplicationAPIs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240703231708_Users_table_created")]
    partial class Users_table_created
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.BasicDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RelationshipStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BasicDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.EducationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("BoardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassingYear")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BasicDetailsId");

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Languages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicDetailsId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Preferences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentCtc")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpectedCtc")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicDetailsId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Technologies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("TechnologyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnologyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicDetailsId");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "manager",
                            Role = "Manager",
                            UserName = "manager"
                        },
                        new
                        {
                            Id = 3,
                            Password = "user",
                            Role = "User",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasicDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BasicDetailsId");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.EducationDetails", b =>
                {
                    b.HasOne("JobApplicationAPIs.Data.DataModel.BasicDetails", "BasicDetails")
                        .WithMany()
                        .HasForeignKey("BasicDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Languages", b =>
                {
                    b.HasOne("JobApplicationAPIs.Data.DataModel.BasicDetails", "BasicDetails")
                        .WithMany()
                        .HasForeignKey("BasicDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Preferences", b =>
                {
                    b.HasOne("JobApplicationAPIs.Data.DataModel.BasicDetails", "BasicDetails")
                        .WithMany()
                        .HasForeignKey("BasicDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.Technologies", b =>
                {
                    b.HasOne("JobApplicationAPIs.Data.DataModel.BasicDetails", "BasicDetails")
                        .WithMany()
                        .HasForeignKey("BasicDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicDetails");
                });

            modelBuilder.Entity("JobApplicationAPIs.Data.DataModel.WorkExperience", b =>
                {
                    b.HasOne("JobApplicationAPIs.Data.DataModel.BasicDetails", "BasicDetails")
                        .WithMany()
                        .HasForeignKey("BasicDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
